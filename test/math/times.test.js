import {
  expect
} from 'chai';

import times from '../../src/times';

describe('times', () => {
  it(`3 * 0.6 = 1.8`, () => {
    expect(times(3, 0.6)).to.be.equal(1.8);
  });
  it(`字符串 '1' * '1'`, () => {
    expect(times('1', '1')).to.be.equal(1);
  });
  it(`3 * 0.6 * 2 = 3.6`, () => {
    expect(times(3, 0.6, 2)).to.be.equal(3.6);
  });
  it(`3 * 0.6 * 2 * 10 = 36`, () => {
    expect(times(3, 0.6, 2, 10)).to.be.equal(36);
  });
  it(`0.07 * 100 = 7`, () => {
    expect(times(0.07, 100)).to.be.equal(7);
  });
  it(`0.7 * 0.1 = 0.07`, () => {
    expect(times(0.7, 0.1)).to.be.equal(0.07);
  });
  it(`3 * 0.3 = 0.9`, () => {
    expect(times(3, 0.3)).to.be.equal(0.9);
  });
  it(`118762317358.75 * 1e-8 = 1187.6231735875`, () => {
    expect(times(118762317358.75, 1e-8)).to.be.equal(1187.6231735875);
  });
  it(`0.362 * 100 = 36.2`, () => {
    expect(times(0.362, 100)).to.be.equal(36.2);
  });
  it(`1.1 * 1.1 = 1.21`, () => {
    expect(times(1.1, 1.1)).to.be.equal(1.21);
  });
  it(`2.018 * 1000 = 2018`, () => {
    expect(times(2.018, 1000)).to.be.equal(2018);
  });
  it(`5.2 * -3.8461538461538462 = -20`, () => {
    expect(times(5.2, -3.8461538461538462)).to.be.equal(-20);
  });
  it(`1.22 * -1.639344262295082 = -2`, () => {
    expect(times(1.22, -1.639344262295082)).to.be.equal(-2);
  });
  it(`2.5 * -0.92 = -2.3`, () => {
    expect(times(2.5, -0.92)).to.be.equal(-2.3);
  });
  it(`-2.2 * 0.6363636363636364 = -1.4`, () => {
    expect(times(-2.2, 0.6363636363636364)).to.be.equal(-1.4);
  });
  // 无限循环小数问题暂时没处理
  // 如：
  // times(7/3, 3) // 7.000000000000001
  // times(times(1/3, 10), 3) // 9.999999999999998

  // it(`-3 * 2.3333333333333335 = -7`, () => {
  //     expect(times(-3, 2.3333333333333335)).to.be.equal(-7);
  // });
  // it(`-0.076 * -92.10526315789471 = 7`, () => {
  //     expect(times(-0.076, -92.10526315789471)).to.be.equal(7);
  // });
  it(`8.0 * -0.3625 = -2.9`, () => {
    expect(times(8.0, -0.3625)).to.be.equal(-2.9);
  });
  it(`6.6 * 0.30303030303030304 = 2`, () => {
    expect(times(6.6, 0.30303030303030304)).to.be.equal(2);
  });
  it(`10.0 * -0.8 = -8`, () => {
    expect(times(10.0, -0.8)).to.be.equal(-8);
  });
  it(`-1.1 * -7.272727272727273 = 8`, () => {
    expect(times(-1.1, -7.272727272727273)).to.be.equal(8);
  });
  it(`-1.23e4 * 20 = -246000`, () => {
    expect(times(-1.23e4, 20)).to.be.equal(-246000);
  });
  it(`1.7e-30 * 1.5e20 = 2.55e-10`, () => {
    expect(times(1.7e-30, 1.5e20)).to.be.equal(2.55e-10);
  });
  it(`2 * 2 * 3 = 12`, () => {
    expect(times(2, 2, 3)).to.be.equal(12);
  });
  it(`2 * 2 * 3 * 0.1 = 1.2`, () => {
    expect(times(2, 2, 3, 0.1)).to.be.equal(1.2);
  });
  it(`0.000000123456 * 0.000000123456 = 1.2`, () => {
    expect(times(0.000000123456, 0.000000123456)).to.be.equal(1.5241383936e-14);
  });
  it(`1.23456e-7 * 1.23456e-7 = 1.2`, () => {
    expect(times(1.23456e-7, 1.23456e-7)).to.be.equal(1.5241383936e-14);
  });
});
